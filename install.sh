#!/bin/bash

# ==============================================================================
#   Script de Instala√ß√£o e Configura√ß√£o do Projeto
# ==============================================================================
#
#   Este script foi criado para facilitar a instala√ß√£o e configura√ß√£o inicial
#   do seu projeto Next.js em um ambiente de desenvolvimento ou produ√ß√£o (VPS).
#   Ele realizar√° as seguintes a√ß√µes:
#
#   1.  Verifica√ß√£o de depend√™ncias essenciais (Node.js, npm, Git).
#   2.  Cria√ß√£o e configura√ß√£o de um arquivo de ambiente (.env).
#   3.  Gera√ß√£o de uma chave secreta segura para a sess√£o.
#   4.  Configura√ß√£o das permiss√µes de usu√°rio iniciais.
#   5.  Instala√ß√£o das depend√™ncias do projeto.
#   6.  Build da aplica√ß√£o para produ√ß√£o.
#   7.  Fornecimento de instru√ß√µes para iniciar o servidor.
#
#   Para executar, d√™ permiss√£o de execu√ß√£o com o comando:
#   chmod +x install.sh
#
#   E depois execute-o com:
#   ./install.sh
#
# ==============================================================================

# Cores para o output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # Sem cor

echo -e "${GREEN}Iniciando a instala√ß√£o e configura√ß√£o do seu projeto...${NC}\n"

# --- 1. Verifica√ß√£o de Depend√™ncias ---
echo "--- Verificando depend√™ncias ---"

command_exists() {
  command -v "$1" >/dev/null 2>&1
}

if ! command_exists node; then
  echo -e "${RED}Erro: Node.js n√£o est√° instalado.${NC}"
  echo -e "${YELLOW}Por favor, instale o Node.js para continuar. Voc√™ pode baix√°-lo em: https://nodejs.org/${NC}"
  exit 1
fi

if ! command_exists npm; then
  echo -e "${RED}Erro: npm n√£o est√° instalado.${NC}"
  echo -e "${YELLOW}O npm geralmente √© instalado junto com o Node.js. Verifique sua instala√ß√£o.${NC}"
  exit 1
fi

if ! command_exists git; then
  echo -e "${YELLOW}Aviso: Git n√£o est√° instalado.${NC}"
  echo -e "O Git √© recomendado para controle de vers√£o, mas n√£o √© estritamente necess√°rio para rodar este script."
fi

echo -e "${GREEN}Todas as depend√™ncias necess√°rias foram encontradas.${NC}\n"


# --- 2. Configura√ß√£o do Arquivo de Ambiente (.env) ---
echo "--- Configurando o arquivo de ambiente (.env) ---"

if [ -f .env ]; then
  echo -e "${YELLOW}O arquivo .env j√° existe. Nenhuma altera√ß√£o ser√° feita para preservar suas configura√ß√µes.${NC}"
else
  echo "Criando o arquivo .env..."
  # Gera uma chave secreta segura de 32 caracteres
  SECRET=$(openssl rand -hex 32)
  echo "SECRET_COOKIE_PASSWORD=$SECRET" > .env
  echo -e "${GREEN}Arquivo .env criado com sucesso com uma chave secreta segura.${NC}"
fi
echo ""


# --- 3. Instala√ß√£o das Depend√™ncias do Projeto ---
echo "--- Instalando depend√™ncias do projeto com npm ---"
echo "Isso pode levar alguns minutos..."

if npm install; then
  echo -e "${GREEN}Depend√™ncias instaladas com sucesso!${NC}\n"
else
  echo -e "${RED}Erro: Falha ao instalar as depend√™ncias com npm.${NC}"
  echo -e "${YELLOW}Verifique se voc√™ tem permiss√£o para escrever na pasta e se o npm est√° configurado corretamente.${NC}"
  exit 1
fi


# --- 4. Build da Aplica√ß√£o para Produ√ß√£o ---
echo "--- Compilando a aplica√ß√£o para produ√ß√£o ---"
echo "Este processo otimiza a aplica√ß√£o para melhor performance..."

if npm run build; then
  echo -e "${GREEN}Build da aplica√ß√£o conclu√≠do com sucesso!${NC}\n"
else
  echo -e "${RED}Erro: Falha ao compilar a aplica√ß√£o.${NC}"
  echo -e "${YELLOW}Verifique os logs de erro acima para identificar a causa do problema.${NC}"
  exit 1
fi


# --- 5. Instru√ß√µes Finais ---
echo -e "üéâ ${GREEN}Instala√ß√£o e configura√ß√£o finalizadas!${NC} üéâ"
echo ""
echo "Sua aplica√ß√£o est√° pronta para ser iniciada em modo de produ√ß√£o."
echo "Para iniciar o servidor, use o seguinte comando:"
echo ""
echo -e "  ${YELLOW}npm start${NC}"
echo ""
echo "O servidor ser√° iniciado, por padr√£o, na porta 9002."
echo "Se voc√™ estiver em uma VPS, lembre-se de configurar seu firewall para permitir tr√°fego na porta escolhida."
echo ""
echo "Para manter a aplica√ß√£o rodando em segundo plano (recomendado), use um gerenciador de processos como o 'pm2':"
echo "1. Instale o pm2 globalmente (s√≥ precisa fazer isso uma vez na m√°quina):"
echo -e "  ${YELLOW}npm install pm2 -g${NC}"
echo "2. Inicie sua aplica√ß√£o com o pm2:"
echo -e "  ${YELLOW}pm2 start npm --name \"seu-app\" -- start${NC}"
echo ""
echo "Comandos √∫teis do pm2:"
echo -e "  - Para ver os logs: ${YELLOW}pm2 logs seu-app${NC}"
echo -e "  - Para parar a aplica√ß√£o: ${YELLOW}pm2 stop seu-app${NC}"
echo -e "  - Para reiniciar a aplica√ß√£o: ${YELLOW}pm2 restart seu-app${NC}"
echo ""
echo -e "Obrigado por usar nosso script de instala√ß√£o! ‚ú®"
echo ""
